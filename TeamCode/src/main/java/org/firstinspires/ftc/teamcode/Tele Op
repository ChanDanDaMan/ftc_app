package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import java.security.Guard;
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.DcMotorSimple;
import com.qualcomm.robotcore.hardware.Servo;

@TeleOp (name = "Tele Op", group = "")

public class TeleOp extends LinearOpMode {

  private DcMotor frontleft;
  private DcMotor frontright;
  private DcMotor backleft;
  private DcMotor backright;
  private DcMotor Latch;
  private DcMotor Guard;
  private Servo Plattform;
  
  @Override
  public void runOpMode() {
    frontleft = hardwareMap.dcMotor.get("front left");
    frontright = hardwareMap.dcMotor.get("front right");
    backleft = hardwareMap.dcMotor.get("back left");
    backright  = hardwareMap.dcMotor.get("back right");
    Latch = hardwareMap.dcMotor.get("Latch");
    Guard = hardwareMap.dcMotor.get("Guard");
    Plattform = hardwareMap.servo.get("Plattform");
    
    frontright.setDirection(DcMotorSimple.Direction.REVERSE);
    backright.setDirection(DcMotorSimple.Direction.REVERSE);
    Latch.setDirection(DcMotorSimple.Direction.REVERSE);
    
    Latch.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
    frontright.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
    backright.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
    frontleft.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
    backleft.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
    
    waitForStart();
    if (opModeIsActive()) {
      while (opModeIsActive()) { 
        double r = Math.hypot(gamepad1.left_stick_x, gamepad1.left_stick_y);
        double robotAngle = Math.atan2(-gamepad1.left_stick_y, gamepad1.left_stick_x) - Math.PI / 4;
        double rightX = gamepad1.right_stick_x;
        final double v1 = r * Math.cos(robotAngle) + rightX;
        final double v2 = r * Math.sin(robotAngle) - rightX;
        final double v3 = r * Math.sin(robotAngle) + rightX;
        final double v4 = r * Math.cos(robotAngle) - rightX;
        
        frontleft.setPower(v1 * .7);
        frontright.setPower(v2 * .7);
        backleft.setPower(v3 * .7);
        backright.setPower(v4 * .7);
        
        if (gamepad1.a) {
          Plattform.setPosition(.8);
        } else if (gamepad1.b) {
          Plattform.setPosition(0);
        }
        
          Latch.setPower((gamepad1.left_trigger + -gamepad1.right_trigger) / 2);
        
        telemetry.update();
      }
    }
  }  
}
