package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.DcMotorEx;
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.DcMotorSimple;
import com.qualcomm.robotcore.hardware.Servo;

@TeleOp (name = "Driver Control", group = "")

public class DriverControl extends LinearOpMode {

    private DcMotor FL;
    private DcMotor FR;
    private DcMotor BL;
    private DcMotor BR;
    private Servo Plattform;
    
@Override
public void runOpMode() {
    FL = hardwareMap.dcMotor.get("FL");
    FR = hardwareMap.dcMotor.get("FR");
    BL = hardwareMap.dcMotor.get("BL");
    BR = hardwareMap.dcMotor.get("BR");
    Plattform = hardwareMap.servo.get("Plattform");
    
    FL.setDirection(DcMotorSimple.Direction.REVERSE);
    FR.setDirection(DcMotorSimple.Direction.REVERSE);
    BL.setDirection(DcMotorSimple.Direction.REVERSE);
    BR.setDirection(DcMotorSimple.Direction.REVERSE);
    
    FL.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
    FR.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
    BL.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
    BR.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
    
    FL.setMode(DcMotor.RunMode.RUN_USING_ENCODER);
    FR.setMode(DcMotor.RunMode.RUN_USING_ENCODER);
    BL.setMode(DcMotor.RunMode.RUN_USING_ENCODER);
    BR.setMode(DcMotor.RunMode.RUN_USING_ENCODER);
    
    Plattform.setPosition(0);
    
    waitForStart();
    if (opModeIsActive()) {
        telemetry.addData("FL Position",  FL.getCurrentPosition());
        telemetry.addData("FR Position", FR.getCurrentPosition());
        telemetry.addData("BL Position", BL.getCurrentPosition());
        telemetry.addData("BR Position", BR.getCurrentPosition());
        telemetry.update();
        while (opModeIsActive()) {
            double r = Math.hypot(gamepad1.left_stick_x, gamepad1.right_stick_x);
            double robotAngle = Math.atan2(-gamepad1.right_stick_x, gamepad1.left_stick_x) - Math.PI / 4;
            double rightX = gamepad1.left_stick_y;
            final double v1 = r * Math.cos(robotAngle) + rightX;
            final double v2 = r * Math.sin(robotAngle) - rightX;
            final double v3 = r * Math.sin(robotAngle) + rightX;
            final double v4 = r * Math.cos(robotAngle) - rightX;
            
            BL.setPower(v1 * .4);
            FR.setPower(v2 * .4);
            FL.setPower(v3 * .4);
            BR.setPower(v4 * .4);
            
        }
        
      }
        
}
}
